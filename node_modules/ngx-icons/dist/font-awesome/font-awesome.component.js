import { Component, Input } from '@angular/core';
var FontAwesomeComponent = (function () {
    function FontAwesomeComponent() {
        this._options = [];
    }
    FontAwesomeComponent.prototype.ngOnInit = function () {
        if (!this.name) {
            throw new Error('Missing name for Font Awesome Component');
        }
        if (this.border) {
            this.addOption("fa-border");
        }
        if (this.size) {
            this.addOption("fa-" + this.size);
        }
        if (this.fixed) {
            this.addOption("fa-fw");
        }
        if (this.animation) {
            this.addOption("fa-" + this.animation);
        }
        if (this.rotate) {
            var rotate = (typeof this.rotate === 'number') ?
                "fa-rotate-" + this.rotate : "fa-flip-" + this.rotate;
            this.addOption(rotate);
        }
        if (this.inverse) {
            this.addOption("fa-inverse");
        }
        if (this.quote === 'left' || this.quote === 'right') {
            this.addOption("fa-quote-" + this.quote);
        }
        if (this.pull === 'left' || this.pull === 'right') {
            this.addOption("fa-pull-" + this.pull);
        }
    };
    Object.defineProperty(FontAwesomeComponent.prototype, "options", {
        get: function () {
            return this._options;
        },
        enumerable: true,
        configurable: true
    });
    FontAwesomeComponent.prototype.addOption = function (addClass) {
        this._options.push(addClass);
    };
    return FontAwesomeComponent;
}());
export { FontAwesomeComponent };
FontAwesomeComponent.decorators = [
    { type: Component, args: [{
                selector: 'fa',
                template: "\n    <i class=\"fa fa-{{name}}\" [ngClass]=\"options\" aria-hidden=\"true\"></i>\n  "
            },] },
];
/** @nocollapse */
FontAwesomeComponent.ctorParameters = function () { return []; };
FontAwesomeComponent.propDecorators = {
    'name': [{ type: Input },],
    'size': [{ type: Input },],
    'fixed': [{ type: Input },],
    'animation': [{ type: Input },],
    'rotate': [{ type: Input },],
    'spin': [{ type: Input },],
    'inverse': [{ type: Input },],
    'quote': [{ type: Input },],
    'border': [{ type: Input },],
    'pull': [{ type: Input },],
};
//# sourceMappingURL=font-awesome.component.js.map